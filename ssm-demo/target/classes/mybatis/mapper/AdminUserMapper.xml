<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.demo.dao.AdminUserMapper">
  <resultMap id="BaseResultMap" type="com.ssm.demo.entity.AdminUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5" />
    <result column="user_token" jdbcType="VARCHAR" property="userToken" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, password_md5, user_token, is_deleted, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_admin_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_admin_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ssm.demo.entity.AdminUser">
    insert into tb_admin_user (id, user_name, password_md5, 
      user_token, is_deleted, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{passwordMd5,jdbcType=VARCHAR}, 
      #{userToken,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.demo.entity.AdminUser">
    insert into tb_admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="passwordMd5 != null">
        password_md5,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.demo.entity.AdminUser">
    update tb_admin_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.demo.entity.AdminUser">
    update tb_admin_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getAdminUserByToken" resultMap="AdminUserResult">
		select id,user_name,user_token
		from tb_admin_user
        where user_token = #{userToken}
        and is_deleted = 0
		ORDER BY  id DESC limit 1
	</select>

  <select id="getUserByUsernameAndPassword" resultMap="AdminUserResult">
    select id,user_name,user_token
		from tb_admin_user
        where user_name = #{userName} and password_md5 = #{passwordMD5}
        and is_deleted = 0
		ORDER BY  id DESC limit 1
  </select>

</mapper>